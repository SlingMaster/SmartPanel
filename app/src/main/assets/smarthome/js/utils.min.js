function getBrowser(){var a=navigator.userAgent;if(a.search(/MSIE/)>0){return"MSIE"}if(a.search(/Firefox/)>0){return"Firefox"}if(a.search(/Opera/)>0){return"Opera"}if(a.search(/Chrome/)>0){return"Chrome"}if(a.search(/Safari/)>0){return"Safari"}if(a.search(/Konqueror/)>0){return"Konqueror"}if(a.search(/Iceweasel/)>0){return"Iceweasel"}if(a.search(/SeaMonkey/)>0){return"SeaMonkey"}if(a.search(/Gecko/)>0){return"Gecko"}return"N/A"}function isTouchDevice(){return(/iphone|ipad|ipod|android|blackberry|mini|windows\sce|palm/i.test(navigator.userAgent))}function isDefined(a){return(a!==null&&a!==undefined)}function isUndefined(a){return(a===null||a===undefined)}function isPresent(a){return(a!==null&&a!==undefined&&a!=="")}function removeObject(a){var b=document.getElementById(a);if(b!==null){b.parentNode.removeChild(b)}}function noCallback(a){}function uniqueKey(a){var c={};for(var b=0;b<a.length;b++){var d=a[b];c[d]=true}return Object.keys(c)}function getTimeFormatUTC(d){var b=Date.parse(d);var e="en-US";var a={year:"numeric",month:"long",day:"numeric",timezone:"UTC",hour:"numeric",minute:"numeric",second:"numeric"};var c=isNaN(b)?"&#8226;":new Date(b).toLocaleString(e,a);return c}function getServerSensorData(a,b){$.ajax({type:"GET",url:a,dataType:"json"}).done(function(c){if(c.status==="ZERO_RESULTS"){console.error("Error of performance | status : ZERO_RESULTS")}else{b(c)}}).error(function(){console.error("Error of performance")})}function showUI(){var a=document.getElementById("win");if(a!==null){a.classList.add("css-fade")}createDisplays();sendRequestForESP();startAutoSendRequest()}function addCrossdomainEventsListener(){if(typeof window.addEventListener!=="undefined"){window.addEventListener("message",onMessageEvent,false)}else{if(typeof window.attachEvent!=="undefined"){window.attachEvent("onmessage",onMessageEvent)}}}var onMessageEvent=function(f){f.stopPropagation();if($("#cloud_srv").hasClass("select")){return}var b=f.data;var a=f.origin;var d=JSON.parse(b);var g=d.id;var c=d.json;printJsonData(g,c);switch(g){case CHIP:c.source="esp";updateDisplay(g,c);break;default:console.warn("onMessageEvent",b," | origin:",a);break}};var z_hashCode=function(a){var b=a.split("").reduce(function(d,c){d=((d<<5)-d)+c.charCodeAt(0);return d&d},0);return(b>>>0).toString()};var z_save_callback=function(b){var a=z_hashCode(b.toString());_callbacks[a]=b;return a};var z_get_callback=function(a){return _callbacks[a]};function printJsonData(b,a){var c="json_list";if(isUndefined(document.getElementById(c))){return}document.getElementById(c).innerHTML='<p style="color:#FFF">chip ID  : '+b+"</p>";if(a!==null){for(var d in a){document.getElementById(c).appendChild(document.createTextNode((d+" : "+a[d]+"\n"),null,3))}}}var MAX_ATTEMPS=3;var attempts_connection=MAX_ATTEMPS;function curProperties(b){var a={results:60,timescale:1,type:"spline",yaxismax:60,yaxismin:30};switch(b){case"t1":case"t2":case"t3":lastGraph=b;break;default:break}a.results=RESULTS[lastGraph];a.timescale=TIME_SCALE[lastGraph];a.type=TYPE[graph_count-1];a.yaxismax=RES_MAX[graph_count-1];a.yaxismin=RES_MIN[graph_count-1];if(lastGraph==="t1"&&graph_count<4){a.yaxismax=null;a.yaxismin=null}return a}function sendRequestForCloud(){getServerSensorData("https://api.thingspeak.com/channels/"+CHANNEL+"/feeds.json?results=1",updateCloudData)}function sendRequestForCloudMinMaxData(b,a){var c={t1:60,t2:720,t3:43200};if(isFieldUpdate()){getServerSensorData("https://api.thingspeak.com/channels/"+CHANNEL+"/fields/"+b+".json?results="+c[a],updateMinMaxData)}else{$("#spiner").hide()}}function updateMinMaxData(b){var d=b.feeds;var c="field"+graph_count;var a=[];document.getElementById("min_max").innerHTML="";for(i=0;i<d.length;++i){if(!isNaN(d[i][c])){a.push(d[i][c])}}document.getElementById("min_max").innerHTML="MIN &#8226; "+Math.min.apply(null,a).toFixed(1)+((SYM[graph_count]===" mmHg")?"":SYM[graph_count])+" | MAX &#8226; "+Math.max.apply(null,a).toFixed(1)+SYM[graph_count];closeSpiner()}function sendCommandESP(e,b,d,f){var a=b+"?cmd="+d+"&val="+f;var c=document.getElementById(e);c.src=a}function updateCloudData(a){updateDisplay(CHIP,getCloudData(a))}function updateDisplay(b,a){updateDisplayData(b,a);$("#srvState").toggleClass("ready",true);attempts_connection=MAX_ATTEMPS;window.setTimeout(function(){$("#receiver").toggleClass("receive",false)},500)}function updateProgressBar(e,c){var d='<div class="cs_label chip">cloud service<br />&#8226; thingspeak.com &#8226;</div>';if(c.source==="esp"){var a=(c.all_mem===0)?44444:c.all_mem;var b=100-100/a*c.mem;d='<div class="cs_label">esp module info<br />free memory &#8226; '+c.mem+' bytes</div><div class="progress"><div class="bar" style="width:'+b+'%"></div></div><div class="cs_label chip">chip id &#8226; '+e+"</div>"}document.getElementById("chipESP").innerHTML=d}function createLedDisplay(e,a,b,d){var c='<div class="ds '+b+'"><p>'+a+'</p><div id="'+e+'" class="val">'+d+"</div></div>";return c}function createControlLedDisplay(e,a,b,d){var c='<div class="ds big '+b+'"><p>'+a+'</p><div id="'+e+'" class="val">'+d+"</div></div>"+createDiapazonLedDisplay(e,d);return c}function updateLedDisplay(c,b){var a=document.getElementById(c);if(isDefined(a)){a.innerHTML=b}}function createProgressLedDisplay(c,b){var a='<div id="'+c+'" class="ds state"><div class="state_progress"></div><div class="state_progress"></div></div>';return a}function createDiapazonLedDisplay(c,b){var a='<div class="ds diapazon"><div class="cs_container fix" onClick="clickSetPickupValue(event);"><button id="dec" class="btn_diapazon s_dec"></button><div class="cs_diapazon_box"><span class="last fan_icon">&nbsp;</span><span class="cs_diapazon_info"></span><span>35</span><span>40</span><span>45</span><span>50</span><span>55</span><span>60</span><span>65</span><span class="last">70</span><div class="cs_diapazon_poz"></div></div><button id="inc" class="btn_diapazon s_inc"></button></div></div>';return a}function createTimeLedDisplay(b){var a='<div id = "receiver" class="ds time receive"><div id="statusLabel" class="cs_label time">'+b+'</div><div id="srvState" class="led_srv_state select"></div><button class="cs_btn_restart" value="restart" onClick="clickControlESP(event)">â€¢</button></div>';return a}function ConnectionThingspeak(f,d,e,a,c,h,j){var g="https://thingspeak.com/channels/"+d+"/charts/"+e+"?bgcolor=%23000&color=%23C90&dynamic=true&results="+c+"&timescale="+a+"&type="+h;var b=document.getElementById(f);b.src=g;b.onload=function(){j.call()}}function nextGraph(a){a.stopPropagation();var b=a.target.id;switch(b){case"t1":case"t2":case"t3":$("#spiner").show();$(".btn_timeline").toggleClass("select",false);$(a.target).toggleClass("select",true);break;case"cloud_srv":$(a.target).toggleClass("select");$(".cs_btn_ui").toggleClass("disabled",$("#cloud_srv").hasClass("select"));$(".btn_diapazon").toggleClass("disabled",$("#cloud_srv").hasClass("select"));return;case"prev":clickVisualization(a);graph_count--;if(graph_count<1){graph_count=MAX_GRAPH}break;case"next":clickVisualization(a);graph_count++;if(graph_count>MAX_GRAPH){graph_count=1}break;default:return}ConnectionCloudThingspeak(graph_count,curProperties(b),setMinMaxData)}function clickVisualization(a){a.stopPropagation();$(a.target).toggleClass("select",true);$("#spiner").show();window.setTimeout(function(){$(a.target).toggleClass("select",false)},250)}function clickSetPickupValue(a){a.stopPropagation();var b=a.target.id;switch(b){case"dec":sendCommandESP("web_srv",WEB_URL,"dec",0);break;case"inc":sendCommandESP("web_srv",WEB_URL,"inc",0);break;default:return}}function setMinMaxData(){sendRequestForCloudMinMaxData(graph_count,lastGraph)}function closeSpiner(){window.setTimeout(function(){$("#spiner").hide()},10)}function startAutoSendRequest(){intervalUpdateESP=setInterval(function(){$("#receiver").toggleClass("receive",true);if($("#cloud_srv").hasClass("select")){sendRequestForCloud()}else{sendRequestForESP()}attempts_connection--;if(attempts_connection===0){$("#srvState").toggleClass("ready",false);$("#statusLabel").html("connection error");$("#cloud_srv").toggleClass("select",true);attempts_connection=MAX_ATTEMPS}},5000)}function sendRequestForESP(){sendCommandESP("web_srv",WEB_URL,"update",0)};